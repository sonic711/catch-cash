buildscript {
    apply from: "${rootProject.projectDir}/version.gradle"
    repositories {
        flatDir { dirs "$rootProject.projectDir/libs" }
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                // http://github.com/jeremylong/DependencyCheck
                'org.owasp:dependency-check-gradle:10.0.2',
                // https://plugins.gradle.org/plugin/org.sonarqube
                'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.0.0.2929',
                // https://plugins.gradle.org/plugin/com.github.spotbugs
                'com.github.spotbugs.snom:spotbugs-gradle-plugin:5.0.14',
                // https://plugins.gradle.org/plugin/io.spring.dependency-management
                'io.spring.gradle:dependency-management-plugin:1.1.5',
                // https://plugins.gradle.org/plugin/io.github.thakurvijendar.dependency-license-report
                'com.github.jk1.dependency-license-report:com.github.jk1.dependency-license-report.gradle.plugin:2.1',
                // https://plugins.gradle.org/plugin/org.hidetake.ssh
                'org.hidetake:core:2.11.2',
                // https://plugins.gradle.org/plugin/com.gorylenko.gradle-git-properties
                'com.gorylenko.gradle-git-properties:gradle-git-properties:2.4.1',
        )
    }
}

ext {
    gitRevision = "git describe --tags --exact-match".execute().text.trim()
    if (gitRevision.isEmpty()) {
        gitRevision = "git rev-parse HEAD".execute().text.trim()
    }
    gitBranch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
    gitUrl = "git remote get-url --push origin".execute().text.trim()
    gitUserEmail = "git config user.email".execute().text.trim()
    gitUserName = "git config user.name".execute().text.trim()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.gorylenko.gradle-git-properties'
    apply from: "${rootProject.projectDir}/gradle/version-info.gradle"

    java {
        sourceCompatibility = jdkVersion
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

