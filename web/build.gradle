import org.apache.tools.ant.filters.ReplaceTokens

apply from: "$rootProject.projectDir/gradle/deploy/$project.name/deploy.gradle"
apply from: "$rootProject.projectDir/gradle/deploy/deploy.gradle"

def profile = System.getProperty('env', 'local')

dependencies {
    // include the model project
    api project(':model')
    api project(':eureka:eureka-plugin')
    // UI
    if (profile != 'local') {
        api project(path: ':web-vue', configuration: profile)
    }

    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    implementation 'org.aspectj:aspectjweaver'

    api(
            "io.jsonwebtoken:jjwt-api:0.11.5",
            "io.jsonwebtoken:jjwt-impl:0.11.5",
            "io.jsonwebtoken:jjwt-jackson:0.11.5"
    )

    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    // gson
    implementation 'com.google.code.gson:gson'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    // jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    // commons-io
    implementation 'commons-io:commons-io:2.14.0'
    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:1.14.7'
}

processResources {
    doFirst {
        println "Active Profile: ${profile}"
        // 只針對application.properties進行替換
        filesMatching(["*.properties", "*.yml"]) { file ->
            println("Processing file: ${file.path}")
            // 在文件中替換特定的 tokens
            filter(ReplaceTokens, tokens: [
                    "env": profile,
                    "spring.active.profiles": profile,
                    "project.groupId"       : project.group,
                    "project.artifactId"    : project.name,
                    "project.version"       : project.version
            ])
        }
    }
    // 忽略重複的資源載入
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // 依照所需資源打包至 resources
    sourceSets {
        main {
            resources {
                // 過濾 resources
                include ('META-INF/*')
                include("application.properties")
                include("application-${profile}.properties")
                include("application-actuator.yml")
                include("application-eureka.yml")
                include("application-info.yml")
                include("log4j2.yml")
                include("sql/**")
            }
        }
    }
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = 'web-server.jar'
    enabled = true
}
